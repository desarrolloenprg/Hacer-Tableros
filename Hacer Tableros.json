{"files":[{"id":"415919e3-9d82-4488-b570-da65a44f8270","name":"MainUnaClase","type":"server_js","source":"function main() {\n\n// ID del documento avance en Google Sheets\nvar id \u003d \"1I52FOnVRSYPSpp_dSMp0r0Y4LQ29sNyI7kyg-HH8EP0\";\n// Nombre de la hoja (pestaña de la sesión) que tiene el avance\nvar nombre \u003d \"17-12\";\n// Hoja de Avance\nvar avance \u003d SpreadsheetApp.openById(id).getSheetByName(nombre).getDataRange().getValues();\n\n// ID del documento Planes de Ruta de la clase, aquí quedará escrito el Plan de Ruta\nvar id2 \u003d \"1hJrY836VdC1pgIJkAOIJmhO_NS32igZrFchTODRFBPc\";\n// Nombre de la pestaña del documento de Planes de Ruta donde quedará escrito el Plan de Ruta automático\nvar nombrePs \u003d \"Estudiantes\";\n// ID del documento Planes de Sesión en PFA\nvar id3 \u003d \"1NS7_vVdChClIPj0pgia34IaZSYDjmr-qOqs9yr31rqM\";\n// Nombre de la pestaña del documento de Planes de Sesión donde quedará escrito el Plan de Ruta automático\nvar nombrePs3 \u003d \"Alumnos EM C\";\n// Hoja de plan de ruta de la clase\nvar plan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs).getDataRange().getValues();\nvar hojaPlan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs);\n// Hoja de plan de sesión en pfa\nvar planSesion \u003d SpreadsheetApp.openById(id3).getSheetByName(nombrePs3).getDataRange().getValues();\nvar hojaPlanSesion \u003d SpreadsheetApp.openById(id3).getSheetByName(nombrePs3);\n  \n// Tercer argumento: fila hoja avance hasta donde se quiere evaluar (Nº fila - 1)\n// Este tercer argumento hay que ponerlo para que la evaluación sea hasta la próxima sesión \n// Cuarto argumento: fila del ultimo alumno en la hoja de planes de Ruta\nplanSesionPrimeraClase(avance, plan, 27, 37, hojaPlan,planSesion,hojaPlanSesion); //80 , 101\n   \n}"},{"id":"0456e08a-b779-4574-816d-9629f1f7af0d","name":"Util","type":"server_js","source":"function obtenerNombre(hoja, indice_fila, indice_columna){\n  \n  var fila \u003d hoja[indice_fila];\n  var valorCelda \u003d fila[indice_columna];\n  \n  //Logger.log(\u0027valorcelda OBTENER NOMBRE \u0027+ valorCelda);\n\n  var nombre \u003d valorCelda.split(\"-\");\n  \n  return nombre[1];\n  \n}\n\n// Retorna numero de columna en la que se ubica un alumno dado el nombre\n// en la hoja de avance.\nfunction buscarAlumno(hoja, nombre) {\n\n    //Fila donde estan ubicados los nombres en la hoja de avance.\n    var n \u003d 4;\n\n    var fila \u003d hoja[n];\n   \n    for (k \u003d 2; k \u003c\u003d fila.length-1; k++) {\n         \n        var valorCelda \u003d String(fila[k]);\n        //Logger.log(\u0027buscarAlumno \u0027 + valorCelda);\n        //[Codigo , Nombre del alumno]\n        var codigoNombre \u003d valorCelda.split(\"-\");\n      \n        var nombre2 \u003d codigoNombre[1];\n      \n        if (nombre2.toUpperCase() \u003d\u003d nombre.toUpperCase()) {\n            return k;\n        }\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n"},{"id":"d8b62770-785f-4d17-a49c-1a8dfa80522e","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Caracas\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [{\n      \"userSymbol\": \"Classroom\",\n      \"serviceId\": \"classroom\",\n      \"version\": \"v1\"\n    }],\n    \"libraries\": [{\n      \"userSymbol\": \"OAuth2\",\n      \"libraryId\": \"1B7FSrk5Zi6L1rSxxTDgDEUsPzlukDsi4KGuTMorsTQHhGBzBkMun4iDF\",\n      \"version\": \"29\"\n    }]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"},{"id":"24ca20e7-50f5-49c7-bb18-3552a6b7b5e4","name":"PlanPrimeraClase","type":"server_js","source":"// Construir Plan de Sesión\n// Parametro etapa_reto: Numero de fila de la hoja Avance que corresponde\n// a la etapa y reto hasta la que se quiere planificar.\n// Parametro ultimoAlumno: Numero de fila de la hoja Planes de Sesion\n// correspondiente al ultimo alumno a evaluar .\nfunction planSesionPrimeraClase(hojaAvance, hojaPlanSesion, etapa_reto, ultimoAlumno, hojaPlan,planPFA,hojaPlanPFA) {\n\n    // Numero de fila donde comienza a registrarse el avance\n    var filaAvance \u003d 5; // No modificar\n    // Numero de fila donde comienzan a registrarse los alumnos\n    var filaAlumnos \u003d 4; // No modificar\n    var alumnos \u003d hojaAvance[filaAlumnos];\n    var fecha \u003d \"PRUEBA\";\n\n    // Insertar dos columnas en plan de ruta\n    hojaPlan.insertColumns(7, 2);\n    var range \u003d hojaPlan.getRange(1, 7);\n    range.setValue(\"Plan de Ruta al \" + fecha);\n    range \u003d hojaPlan.getRange(1, 8);\n    range.setValue(\"Navegante / Conductor al \" + fecha);\n\n    // Insertar cuatro columnas en plan de sesión PFA\n    hojaPlanPFA.insertColumns(6, 4);\n    range \u003d hojaPlanPFA.getRange(2, 6);\n    range.setValue(\"Plan de Ruta al \" + fecha);\n    range \u003d hojaPlanPFA.getRange(2, 7);\n    range.setValue(\"NVG/CND\");\n    range \u003d hojaPlanPFA.getRange(2, 8);\n    range.setValue(\"Plan de Sesión al \" + fecha);\n    range \u003d hojaPlanPFA.getRange(2, 9);\n    range.setValue(\"Plan de Sesión al \" + fecha + \" OBSERVACIONES DE LA SESIÓN\");\n    \n\n    // Si se desea modificar donde comienza a leer en la hoja de plan\n    // de sesion, modificar el indice \u0027 i \u0027 en el ciclo a continuación.\n    // Recorriendo todos los alumnos de la hoja Plan Sesion.\n    // Indice \u003d Nº Fila - 1\n    for (i \u003d 1; i \u003c\u003d ultimoAlumno - 1; i++) {\n\n        //var nombreAlumno \u003d concatenarNombre(hojaPlanRuta, i, 5);\n        var nombreAlumno \u003d obtenerNombre(hojaPlanSesion, i, 5);\n        var ubicacionAlumno \u003d buscarAlumno(hojaAvance, nombreAlumno);\n\n        if (ubicacionAlumno \u003d\u003d 0) {\n            Logger.log(\u0027ubicacion alumno \u0027 + ubicacionAlumno);\n            continue;\n        }\n        else {\n            var listaNotTried \u003d [];\n            var etapaActual \u003d hojaAvance[filaAvance][0];\n            var conjuntoRetos \u003d []; // Todos los retos a realizar de una etapa\n            var todoListo \u003d 1;\n\n            for (j \u003d filaAvance; j \u003c\u003d etapa_reto + 1; j++) {\n\n                //if (etapaActual !\u003d hojaAvance[j][0]) {\n                    if (conjuntoRetos.length \u003e 0) {\n                        conjuntoRetos.unshift(etapaActual);\n                        listaNotTried.push(conjuntoRetos);\n                        conjuntoRetos \u003d [];\n                    }\n                    etapaActual \u003d hojaAvance[j][0];\n                    //Logger.log(\u0027etapa actual \u0027 + etapaActual);\n                //}\n                if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link not tried\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\"\n                || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted paired\") {\n                     //Logger.log(\u0027falta \u0027 + nombreAlumno + \" resultado \" + hojaAvance[j][ubicacionAlumno] + \" fila columna \" + j + \" \" + ubicacionAlumno); \n                     todoListo \u003d 0; \n                     conjuntoRetos.push(hojaAvance[j][1]);\n                     //Logger.log(\u0027retos \u0027 + hojaAvance[j][1]);\n                }\n            }\n\n            var plan \u003d \"\";\n            var words \u003d nombreAlumno.split(\u0027 \u0027);\n            if (listaNotTried.length \u003e\u003d 1)\n            {\n                //for (k \u003d 0; k \u003c listaNotTried.length; k +\u003d 1) {\n                  for (k \u003d listaNotTried.length - 1; k \u003c listaNotTried.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaNotTried[k][0] + \" Reto: \");\n                  //for (l \u003d 1; l \u003c listaNotTried[k].length; l +\u003d 1) {\n                  for (l \u003d listaNotTried[k].length - 1; l \u003c listaNotTried[k].length ; l +\u003d 1) {\n                      plan \u003d plan.concat(listaNotTried[k][l] + \", \");\n                  }\n                }\n                //Logger.log(\"nombre \"+ words[0]);\n                plan \u003d words[0] + \", en CODE.ORG completa todos los retos hasta: \" + plan;\n            }\n\n            //Logger.log(\u0027nombre \u0027 + nombreAlumno + \" plan\" + plan + \"XX\" );\n            if (todoListo \u003d\u003d 1 || plan.length \u003d\u003d 0 ) {\n              plan \u003d words[0] + \",  si tu compañero/a no está igual que tu, ayúdalo/a a avanzar, si no, busca una pareja para ayudarlos siendo NAVEGANTE\";\n              todoListo \u003d 1;\n              //Logger.log(\u0027plan \u0027 + plan);  \n            }\n          \n            //Escribir en plan de ruta PES\n            var filaRegistroAvance \u003d i + 1;\n            var fr \u003d filaRegistroAvance.toString();\n            //Esta es la columna en Gloogle Shhets en donde se escribe el Plan de Ruta\n            var columnaRegistroAvance \u003d \"G\";\n            //plan\n            var celda \u003d columnaRegistroAvance.concat(fr);\n            var cell \u003d hojaPlan.getRange(celda);\n            cell.setValue(plan);\n            if (todoListo \u003d\u003d 1 || plan.length \u003d\u003d 0 ) {\n                cell.setBackgroundColor(\"#C0C0C0\"); \n            }\n            //conductor-navegante\n            var rango \u003d hojaPlan.getRange(i+1, 10);\n            var valor \u003d rango.getValue();\n            rango \u003d hojaPlan.getRange(i+1, 8);\n            if (todoListo \u003d\u003d 1 || plan.length \u003d\u003d 0 ) {\n              valor \u003d \"NVG\";\n              rango.setValue(\"NVG\");\n            }\n            else {\n              if (valor \u003d\u003d \"CND\") {\n                rango.setValue(\"NVG\");\n                valor \u003d \"NVG\";\n              }\n              else {\n                rango.setValue(\"CND\");\n                valor \u003d \"CND\";\n              }\n            }\n            //Escribir en plan de sesión PFA\n            filaRegistroAvance \u003d i + 2;\n            fr \u003d filaRegistroAvance.toString();\n            //Esta es la columna en Gloogle Shhets en donde se escribe el Plan de Ruta\n            columnaRegistroAvance \u003d \"F\";\n            //plan\n            celda \u003d columnaRegistroAvance.concat(fr);\n            cell \u003d hojaPlanPFA.getRange(celda);\n            cell.setValue(plan);\n            if (todoListo \u003d\u003d 1 || plan.length \u003d\u003d 0 ) {\n                cell.setBackgroundColor(\"#C0C0C0\"); \n            }\n            //conductor-navegante\n            rango \u003d hojaPlanPFA.getRange(i+2, 7);\n            rango.setValue(valor);\n            //sheetTest[0].getRange(i, 1).setValue( plan );\n        }\n    }\n}\n\n"},{"id":"9f403258-4214-410d-a195-147f589c1fd1","name":"PlanSegundaClase","type":"server_js","source":"// Construir Plan de Sesión\n// Parametro etapa_reto: Numero de fila de la hoja Avance que corresponde\n// a la etapa y reto hasta la que se quiere planificar.\n// Parametro ultimoAlumno: Numero de fila de la hoja Planes de Sesion\n// correspondiente al ultimo alumno a evaluar .\nfunction planSesionSegundaClase(hojaAvance, hojaPlanSesion, etapa_reto, ultimoAlumno, hojaPlan) {\n\n    // Numero de fila donde comienza a registrarse el avance\n    var filaAvance \u003d 5;\n    // Numero de fila donde comienzan a registrarse los alumnos\n    var filaAlumnos \u003d 4;\n\n    //var alumnos \u003d hojaAvance[filaAlumnos];\n\n    // Recorriendo todos los alumnos de la hoja Plan Sesion\n    for (i \u003d 1; i \u003c\u003d ultimoAlumno - 1; i++) {\n\n        //var nombreAlumno \u003d concatenarNombre(hojaPlanSesion, i, 5);\n        var nombreAlumno \u003d obtenerNombre(hojaPlanSesion, i, 5);\n        var ubicacionAlumno \u003d buscarAlumno(hojaAvance, nombreAlumno);\n\n        if (ubicacionAlumno \u003d\u003d 0) {\n            continue;\n        }\n        else {\n            var listaNotTried \u003d [];\n            var listaAttemptedPassed \u003d [];\n            var etapaActual \u003d hojaAvance[filaAvance][0];\n            var RetosPorRealizar \u003d []; // Todos los retos a realizar de una etapa\n            var RetosPorTerminarMejorar \u003d [];\n\n            for (j \u003d filaAvance; j \u003c\u003d etapa_reto + 1; j++) {\n\n                if (etapaActual !\u003d hojaAvance[j][0] || j \u003d\u003d etapa_reto + 1 ) {\n                    if (RetosPorRealizar.length \u003e 0) {\n                        RetosPorRealizar.unshift(etapaActual);\n                        listaNotTried.push(RetosPorRealizar);\n                        RetosPorRealizar \u003d [];\n                    }\n\n                    if (RetosPorTerminarMejorar.length \u003e 0) {\n                        RetosPorTerminarMejorar.unshift(etapaActual);\n                        listaAttemptedPassed.push(RetosPorTerminarMejorar);\n                        RetosPorTerminarMejorar \u003d [];\n                    }\n                    etapaActual \u003d hojaAvance[j][0];\n                }\n                if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link not_tried\") {\n                    RetosPorRealizar.push(hojaAvance[j][1]);\n                }\n                else if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link passed\" ||\n                  hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted paired\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link passed paired\") {\n                    RetosPorTerminarMejorar.push(hojaAvance[j][1]);\n                }\n            }\n\n            var plan \u003d \"\";\n\n            if (listaNotTried.length \u003e\u003d 1)\n            {\n              for (k \u003d 0; k \u003c listaNotTried.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaNotTried[k][0] + \" Retos: \");\n                  for (l \u003d 1; l \u003c listaNotTried[k].length; l +\u003d 1) {\n                      plan \u003d plan.concat(listaNotTried[k][l] + \", \");\n                  }\n              }\n              plan \u003d nombreAlumno + \" Cumbres por alcanzar: \" + plan;\n            }\n            \n            if (listaAttemptedPassed.length \u003e\u003d 1)\n            {\n              plan \u003d plan.concat(\" Cumbres por enfrentar de nuevo:  \");\n\n              for (k \u003d 0; k \u003c listaAttemptedPassed.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaAttemptedPassed[k][0] + \" Retos: \");\n                  for (l \u003d 1; l \u003c listaAttemptedPassed[k].length; l +\u003d 1) {\n                      plan \u003d plan.concat(listaAttemptedPassed[k][l] + \", \");\n                  }\n              }\n            }\n            var filaRegistroAvance \u003d i + 1;\n            var fr \u003d filaRegistroAvance.toString();\n            //Esta es la columna en Gloogle Shhets en donde se escribe el Plan de Ruta\n            var columnaRegistroAvance \u003d \"S\";\n            var celda \u003d columnaRegistroAvance.concat(fr);\n\n            var cell \u003d hojaPlan.getRange(celda);\n            cell.setValue(plan);\n            //sheetTest[0].getRange(i, 1).setValue( plan );\n\n        }\n    }\n}\n\n"},{"id":"73c89ecc-296f-4dce-9c86-042f43c5ab92","name":"PlanSesionGeneral","type":"server_js","source":"// Construir Plan de Sesión\n// Parametro etapa_reto: Numero de fila de la hoja Avance que corresponde\n// a la etapa y reto hasta la que se quiere planificar.\n// Parametro ultimoAlumno: Numero de fila de la hoja Planes de Sesion\n// correspondiente al ultimo alumno a evaluar .\nfunction planSesionGeneral(hojaAvance, hojaAvance2, hojaPlanSesion, etapa_reto, ultimoAlumno, hojaPlan) {\n\n    /*\n    Información para Google Classroom\n    */\n    var Curso \u003d \"PES 2018-2019\";\n    var CursoId \u003d BuscarIdCurso(Curso);\n    var estudiantes \u003d Classroom.Courses.Students.list(CursoId).students;\n    var profesores \u003d Classroom.Courses.Teachers.list(CursoId).teachers;\n    var idProfesor \u003d BuscarIdProfesor(\"Simon Esperanza\", profesores);\n    var idValeria \u003d BuscarIdProfesor(\"Valeria Leon\", profesores);\n\n    // Numero de fila donde comienza a registrarse el avance\n    var filaAvance \u003d 5;\n    // Numero de fila donde comienzan a registrarse los alumnos\n    var filaAlumnos \u003d 4;\n\n    //var alumnos \u003d hojaAvance[filaAlumnos];\n\n    // Recorriendo todos los alumnos de la hoja Plan Sesion\n    for (i \u003d 1; i \u003c\u003d ultimoAlumno - 1; i++) {\n\n        //var nombreAlumno \u003d concatenarNombre(hojaPlanSesion, i, 5);\n        var nombreAlumno \u003d obtenerNombre(hojaPlanSesion, i, 5);\n        var ubicacionAlumno \u003d buscarAlumno(hojaAvance, nombreAlumno);\n\n        if (ubicacionAlumno \u003d\u003d 0) {\n            continue;\n        }\n        else {\n            var listaNotTried \u003d [];\n            var listaAttemptedPassed \u003d [];\n            var listaTercerIntento \u003d [];\n            var etapaActual \u003d hojaAvance[filaAvance][0];\n            var RetosPorRealizar \u003d []; // Todos los retos a realizar de una etapa\n            var RetosPorTerminarMejorar \u003d [];\n            var RetosDebenAlcanzarse \u003d [];\n\n            for (j \u003d filaAvance; j \u003c\u003d etapa_reto + 1; j++) {\n\n                if (etapaActual !\u003d hojaAvance[j][0] || j \u003d\u003d etapa_reto + 1) {\n                    if (RetosPorRealizar.length \u003e 0) {\n                        RetosPorRealizar.unshift(etapaActual);\n                        listaNotTried.push(RetosPorRealizar);\n                        RetosPorRealizar \u003d [];\n                    }\n\n                    if (RetosPorTerminarMejorar.length \u003e 0) {\n                        RetosPorTerminarMejorar.unshift(etapaActual);\n                        listaAttemptedPassed.push(RetosPorTerminarMejorar);\n                        RetosPorTerminarMejorar \u003d [];\n                    }\n\n                    if (RetosDebenAlcanzarse.length \u003e 0) {\n                        RetosDebenAlcanzarse.unshift(etapaActual);\n                        listaTercerIntento.push(RetosDebenAlcanzarse);\n                        RetosDebenAlcanzarse \u003d [];\n                    }\n\n                    etapaActual \u003d hojaAvance[j][0];\n\n                }\n                if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link not_tried\") {\n                    RetosPorRealizar.push(hojaAvance[j][1]);\n                }\n\n                else if\n                (\n                    (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link passed\"\n                      || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link attempted paired\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link passed paired\")\n                    \u0026\u0026\n                    (hojaAvance2[j][ubicacionAlumno] \u003d\u003d \"level_link not_tried\")\n                ) {\n                    RetosPorTerminarMejorar.push(hojaAvance[j][1]);\n                }\n\n                else if\n                (\n                    (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link passed\"\n                      || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link attempted paired\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link passed paired\")\n                    \u0026\u0026\n                    (hojaAvance2[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\" || hojaAvance2[j][ubicacionAlumno] \u003d\u003d \"level_link passed\"\n                      || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link attempted paired\" || hojaAvance[j][ubicacionAlumno] \u003d\u003d\"level_link passed paired\")\n                ) {\n                    RetosDebenAlcanzarse.push(hojaAvance[j][1]);\n                }\n                else {\n                    continue;\n                }\n\n            }\n\n            var plan \u003d \"\";\n            if (listaNotTried.length \u003e\u003d 1)\n            {\n              for (k \u003d 0; k \u003c listaNotTried.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaNotTried[k][0] + \" Retos: \");\n                  for (l \u003d 1; l \u003c listaNotTried[k].length; l +\u003d 1) {\n                      plan \u003d plan.concat(listaNotTried[k][l] + \", \");\n                  }\n              }\n              plan \u003d nombreAlumno + \" Cumbres por alcanzar: \" + plan;\n            }\n            \n            if (listaAttemptedPassed.length \u003e\u003d 1)\n            {\n              plan \u003d plan.concat(\" Cumbres por enfrentar de nuevo:  \");\n              for (k \u003d 0; k \u003c listaAttemptedPassed.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaAttemptedPassed[k][0] + \" Retos: \");\n                  for (l \u003d 1; l \u003c listaAttemptedPassed[k].length; l +\u003d 1) {\n                      plan \u003d plan.concat(listaAttemptedPassed[k][l] + \", \");\n                  }\n              }\n            }\n            \n            if (listaTercerIntento.length \u003e\u003d 1)\n            {\n              plan \u003d plan.concat(\" Cumbres que finalmente deben ser conquistadas:  \");\n\n              for (k \u003d 0; k \u003c listaTercerIntento.length; k +\u003d 1) {\n                  plan \u003d plan.concat(\"Etapa \" + listaTercerIntento[k][0] + \" Retos: \");\n                  for (l \u003d 1; l \u003c listaTercerIntento[k].length; l +\u003d 1) {\n                      plan \u003d plan.concat(listaTercerIntento[k][l] + \", \");\n                  }\n              }\n            }\n            \n\n\n            var filaRegistroAvance \u003d i + 1;\n            var fr \u003d filaRegistroAvance.toString();\n            var columnaRegistroAvance \u003d \"U\";\n            var celda \u003d columnaRegistroAvance.concat(fr);\n\n            var cell \u003d hojaPlan.getRange(celda);\n            cell.setValue(plan);\n            \n            if (listaTercerIntento.length \u003e 0 \u0026\u0026 idProfesor !\u003d \"\"){\n                Logger.log(\u0027Classroom: \u0027+ nombreAlumno);\n                var idEstudiante \u003d BuscarIdEstudiante(nombreAlumno, estudiantes);\n                Logger.log(\u0027ID \u0027+ nombreAlumno + \u0027 listo\u0027);\n                \n                if (idEstudiante !\u003d \"\"){\n                Logger.log(\u0027Entrando Registrar Mensaje \u0027+ nombreAlumno);\n                RegistrarMensaje(CursoId, idEstudiante, idProfesor, plan);\n                Logger.log(\u0027Saliendo Registrar Mensaje \u0027+ nombreAlumno);\n                }               \n                \n            }\n            Logger.log(\u0027Saliendo If classroom \u0027+ nombreAlumno);\n            \n\n        }\n\n    }\n    //prueba borrar\n    //BorrarMensajes(CursoId,idValeria,estudiantes);\n\n\n}"},{"id":"45dae0ff-f50b-422e-931e-6abae4340162","name":"Respaldo Plan Original","type":"server_js","source":"// Construir Plan de Sesión\n// Parametro etapa_reto: Numero de fila de la hoja Avance que corresponde\n// a la etapa y reto hasta la que se quiere planificar.\n// Parametro ultimoAlumno: Numero de fila de la hoja Planes de Sesion\n// correspondiente al ultimo alumno a evaluar .\n/*function planSesionPrimeraClase(hojaAvance, hojaPlanSesion, etapa_reto, ultimoAlumno, hojaPlan) {\n\n    // Numero de fila donde comienza a registrarse el avance\n    var filaAvance \u003d 5;\n    // Numero de fila donde comienzan a registrarse los alumnos\n    var filaAlumnos \u003d 4;\n\n    var alumnos \u003d hojaAvance[filaAlumnos];\n\n    // Recorriendo todos los alumnos de la hoja Plan Sesion\n    for (i \u003d 1; i \u003c\u003d ultimoAlumno-1; i++) {\n\n        //var nombreAlumno \u003d concatenarNombre(hojaPlanSesion, i, 5);\n        var nombreAlumno \u003d obtenerNombre(hojaPlanSesion, i, 5);\n        var ubicacionAlumno \u003d buscarAlumno(hojaAvance, nombreAlumno);\n\n        if (ubicacionAlumno \u003d\u003d 0) {\n            continue;\n        }\n        else {\n            var planDeSesion \u003d nombreAlumno + \" Realizar : \";\n\n            var listaAttempted \u003d [];\n            var listaPassed \u003d [];\n            var listaNotTried \u003d [];\n\n            for (j \u003d filaAvance; j \u003c\u003d etapa_reto; j++) {\n\n                if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link not_tried\") {\n                    listaNotTried.push(hojaAvance[j][0]);\n                    listaNotTried.push(hojaAvance[j][1]);\n                }\n                else if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link attempted\") {\n                    listaAttempted.push(hojaAvance[j][0]);\n                    listaAttempted.push(hojaAvance[j][1]);\n                }\n                else if (hojaAvance[j][ubicacionAlumno] \u003d\u003d \"level_link passed\") {\n                    listaPassed.push(hojaAvance[j][0]);\n                    listaPassed.push(hojaAvance[j][1]);\n                }\n\n            }\n          \n            var plan \u003d nombreAlumno + \" Completar: \";\n  \n          for ( l \u003d 0; l \u003c listaAttempted.length; l+\u003d2){\n            plan \u003d plan.concat(\"E\" + listaAttempted[l] + \"R\" + listaAttempted[l+1] + \" \");\n          }\n          \n          plan \u003d plan.concat(\" Mejorar: \");\n          \n          for ( m \u003d 0; m \u003c listaPassed.length; m+\u003d2){\n            plan \u003d plan.concat(\"E\" + listaPassed[m] + \"R\" + listaPassed[m+1] + \" \");\n          }\n          \n          plan \u003d plan.concat(\" Realizar: \");\n          \n          for ( n \u003d 0; n \u003c listaNotTried.length; n+\u003d2){\n            plan \u003d plan.concat(\"E\" + listaNotTried[n] + \"R\" + listaNotTried[n+1] + \" \");\n          }\n  \n          var filaRegistroAvance \u003d i+1;\n          var fr \u003d filaRegistroAvance.toString();\n          var columnaRegistroAvance \u003d \"AC\";\n          var celda \u003d columnaRegistroAvance.concat(fr);\n                    \n          var cell \u003d hojaPlan.getRange(celda);\n          cell.setValue(plan);\n          //sheetTest[0].getRange(i, 1).setValue( plan );\n            \n        }\n\n    }\n\n\n}\n*/"},{"id":"19162ab7-c38e-424b-af77-bc7b46926fe0","name":"MainDosClases","type":"server_js","source":"function main2() {\n\n// ID del documento avance en Google Sheets\nvar id \u003d \"1VIhFC6woy6hGvxBvxW_ZCi86112vFB-zj5ByAlnM25s\";\n// Nombre de la hoja (pestaña de la sesión) que tiene el avance\nvar nombre \u003d \"02-05\";\n// Hoja de Avance\nvar avance \u003d SpreadsheetApp.openById(id).getSheetByName(nombre).getDataRange().getValues();\n\n\n// ID del documento Planes de Ruta, aquí quedará escrito el Plan de Ruta\nvar id2 \u003d \"10AU18ROahOu99Qu04op4PoOnQ8CJ74TdavoQK0qLaNQ\";\n// Nombre de la pestaña del documento de Planes de Ruta donde quedará escrito el Plan de Ruta automático\nvar nombrePs \u003d \"Alumnos\";\n// Hoja de plan de sesión\nvar plan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs).getDataRange().getValues();\nvar hojaPlan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs);\n  \n  // Tercer argumento: fila hoja avance hasta donde se quiere evaluar (Nº fila - 1)\n  // Este tercer argumento hay que ponerlo para que la evaluación sea hasta la próxima sesión \n  // Cuarto argumento: fila del ultimo alumno en la hoja de planes\n  planSesionSegundaClase(avance, plan, 86, 101, hojaPlan);\n   \n}"},{"id":"adb6747b-046d-40b0-a682-88cfb9f87ba7","name":"MainGeneral","type":"server_js","source":"function main3() {\n\n// ID del documento avance en Google Sheets\nvar id \u003d \"1VIhFC6woy6hGvxBvxW_ZCi86112vFB-zj5ByAlnM25s\";\n\n// Nombre de la hoja (pestaña de la sesión) que tiene el avance\nvar nombre \u003d \"09-05\"; // de esta obtiene el avance\nvar nombre2 \u003d \"04-05\"; // esta es la anterior\n// Hoja de Avance\nvar avance \u003d SpreadsheetApp.openById(id).getSheetByName(nombre).getDataRange().getValues();\nvar avance2 \u003d SpreadsheetApp.openById(id).getSheetByName(nombre2).getDataRange().getValues();\n\n\n// ID del documento Planes de Ruta, aquí quedará escrito el Plan de Ruta\nvar id2 \u003d \"10AU18ROahOu99Qu04op4PoOnQ8CJ74TdavoQK0qLaNQ\";\n// Nombre de la hoja del plan de sesión\nvar nombrePs \u003d \"Alumnos\";\n// Hoja de plan de sesión\nvar plan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs).getDataRange().getValues();\nvar hojaPlan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs);\n\n// Tercer argumento: fila hoja avance hasta donde se quiere evaluar (Nº fila - 1)\n// Este tercer argumento hay que ponerlo para que la evaluación sea hasta la próxima sesión \n// Cuarto argumento: fila del ultimo alumno en la hoja de planes\nplanSesionGeneral(avance, avance2, plan, 98, 101, hojaPlan);\n   \n}"},{"id":"45e79f07-8e3e-4b74-9e80-b84d4f7190f7","name":"GoogleClassroom","type":"server_js","source":"function BuscarIdCurso(nombreCurso) {\n    var response \u003d Classroom.Courses.list();\n    var courses \u003d response.courses;\n    if (courses \u0026\u0026 courses.length \u003e 0) {\n        for (i \u003d 0; i \u003c courses.length; i++) {\n            var course \u003d courses[i];\n            if (course.name.toUpperCase() \u003d\u003d nombreCurso.toUpperCase()) {\n                Logger.log(\u0027%s (%s)\u0027, course.name, course.id);\n                return course.id;\n            }\n        }\n    } else {\n        Logger.log(\u0027No se han encontrado cursos.\u0027);\n        return \"\";\n    }\n}\n\nfunction BuscarIdEstudiante(nombreEstudiante, estudiantes) {\n    //Logger.log(\u0027BuscarIdEstudiante para el alumno: \u0027+ nombreEstudiante);\n    for (k \u003d 0; k \u003c estudiantes.length; k++) {\n        var estudiante \u003d estudiantes[k];\n        if (estudiante.profile.name.fullName \u003d\u003d nombreEstudiante) {\n            Logger.log(nombreEstudiante + \u0027 encontrado en la posicion: \u0027+k);\n            return estudiante.profile.id;\n            Logger.log(\u0027Despues del return BuscarIdEstudiante\u0027);\n            break;\n            Logger.log(\u0027Despues del break BuscarIdEstudiante\u0027);\n        }\n        Logger.log(\u0027Despues comprobar nombre \u0027+nombreEstudiante);\n    }\n    return \"\";\n}\n\nfunction BuscarIdProfesor(nombreProfesor, profesores) {\n    for (i \u003d 0; i \u003c profesores.length; i++) {\n        var profesor \u003d profesores[i];\n        if (profesor.profile.name.fullName.toUpperCase() \u003d\u003d nombreProfesor.toUpperCase()) {\n            return profesor.profile.id;\n        }\n    }\n    return \"\";\n}\n\nfunction RegistrarMensaje(CursoId, idEstudiante, idProfesor, mensajePrivado) {\n    var estudiantes \u003d [idEstudiante];\n    var anuncio \u003d Classroom.newAnnouncement();\n\n    anuncio.courseId \u003d CursoId;\n    anuncio.state \u003d \"PUBLISHED\";\n    anuncio.text \u003d mensajePrivado;\n    anuncio.assigneeMode \u003d \"INDIVIDUAL_STUDENTS\";\n    anuncio.individualStudentsOptions \u003d Classroom.newIndividualStudentsOptions();\n    anuncio.individualStudentsOptions.studentIds \u003d estudiantes;\n    anuncio.creatorUserId \u003d idProfesor;\n\n    Classroom.Courses.Announcements.create(anuncio, CursoId);\n    Logger.log(\u0027Saliendo metodo RegistrarMensaje \u0027+idEstudiante);\n}\n\nfunction BorrarMensajes(CursoId,idValeria,estudiantes) {\n    \n    var idEstudiante \u003d BuscarIdEstudiante(\"Ariadna Alloggia\", estudiantes);\n    var estudiante \u003d [idEstudiante];\n    Logger.log(\u0027Ariadna id \u0027 + idEstudiante);\n    \n    var anuncios \u003d Classroom.Courses.Announcements.list(CursoId).announcements;\n    \n    for (k \u003d 0; k \u003c anuncios.length; k++) {\n        var anuncio \u003d anuncios[k];\n        anuncio.creatorUserId \u003d idValeria;\n        anuncio.state \u003d \"DELETED\";\n        //Classroom.Courses.Announcements.remove(CursoId, anuncio.id);   \n        //Classroom.Courses.Announcements.\n        var estado \u003d {\u0027state\u0027:\u0027DELETED\u0027}\n        var extra \u003d  {\u0027updateMask\u0027:\u0027state\u0027};\n        //Classroom.Courses.Announcements.patch(estado,CursoId,anuncio.id,extra);\n\n        estado \u003d {\u0027studentIds\u0027:\u0027115654079261530942387\u0027};\n        estado \u003d { \u0027studentIds\u0027: \u0027[ 115654079261530942387  ]\u0027};\n        Classroom.Courses.Announcements.modifyAssignees(estado, CursoId, anuncio.id);\n    }\n   \n    Logger.log(\u0027Saliendo metodo BorrarMensaje \u0027 + anuncios.length);\n}\n\nfunction BuscarMensajes(CursoId,idValeria,estudiantes) {\n    \n    var idEstudiante \u003d BuscarIdEstudiante(\"Ariadna Alloggia\", estudiantes);\n    var estudiante \u003d [idEstudiante];\n    Logger.log(\u0027Ariadna id \u0027 + idEstudiante);\n    \n    var anuncios \u003d Classroom.Courses.Announcements.list(CursoId).announcements;\n    \n    for (k \u003d 0; k \u003c anuncios.length; k++) {\n        var anuncio \u003d anuncios[k];\n        Logger.log(\u0027Anuncio:  \u0027 + anuncio.text);\n    }\n   \n    Logger.log(\u0027Saliendo metodo BuscarMensaje \u0027 + anuncios.length);\n}\n\nfunction test(){\n  var CursoId \u003d BuscarIdCurso(\"PES 2018-2019\");\n  var estudiantes \u003d Classroom.Courses.Students.list(CursoId).students;\n  var profesores \u003d Classroom.Courses.Teachers.list(CursoId).teachers;\n  var idEstudiante \u003d BuscarIdEstudiante(\"Beiker Cordoba\", estudiantes);\n  var idProfesor \u003d BuscarIdProfesor(\"Simon Esperanza\", profesores);\n  RegistrarMensaje(CursoId, idEstudiante, idProfesor, \"Cumbres que finalmente deben ser alcanzadas\");\n}"},{"id":"ece72b40-8222-4a5d-afe0-e54422b5aaf8","name":"Info","type":"server_js","source":"/*\n\nDOCUMENTACION\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n"},{"id":"98aca611-86a9-4bc7-99ce-0df45044f233","name":"MainBuscarMensajes","type":"server_js","source":"function main4() {\n\n\n// ID del documento Mensajes, aquí quedarán escritos los mensajes\nvar id2 \u003d \"1bxBrzuSfdQjiPE8KSy9Nkju75F616HXlLSbyTJAHL0Y\";\n// Nombre de la pestaña del documento de Mensajes donde quedarán escritos los mensajes\nvar nombrePs \u003d \"Hoja 1\";\n\nvar plan \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs).getDataRange().getValues();\nvar hojaMensajes \u003d SpreadsheetApp.openById(id2).getSheetByName(nombrePs);\n\nMensajes(plan, hojaMensajes); //80 , 101\n   \n}"},{"id":"77db3f06-4611-4b94-9425-87354bc5320a","name":"MensajesGo","type":"server_js","source":"// Construir Plan de Sesión\n// Parametro etapa_reto: Numero de fila de la hoja Avance que corresponde\n// a la etapa y reto hasta la que se quiere planificar.\n// Parametro ultimoAlumno: Numero de fila de la hoja Planes de Sesion\n// correspondiente al ultimo alumno a evaluar .\nfunction Mensajes(hojaAvance, hojaPlan) {\n\n  /*\n    Información para Google Classroom\n    */\n    var Curso \u003d \"PFA 2018-2019\";\n    var CursoId \u003d BuscarIdCurso(Curso);\n    var estudiantes \u003d Classroom.Courses.Students.list(CursoId).students;\n    var profesores \u003d Classroom.Courses.Teachers.list(CursoId).teachers;\n    var idProfesor \u003d BuscarIdProfesor(\"Simon Esperanza\", profesores);\n    var idValeria \u003d BuscarIdProfesor(\"Valeria Leon\", profesores);\n\n  //Buscar\n BuscarMensajes(CursoId,idValeria,estudiantes);\n  \n}\n\n"},{"id":"3c178c50-4361-47d2-8976-e08e2bb386e9","name":"Master","type":"server_js","source":"function main() {\n  //Cambiar estas 6 variables dependiendo de los documentos que se vayan a utilizar.\n  //Hoja de sección \n  var id\u003d\"1I52FOnVRSYPSpp_dSMp0r0Y4LQ29sNyI7kyg-HH8EP0\";\n  //Nombre de hoja de avance\n  var nombre\u003d\"07-02\";\n  //Nombre de hoja \n  var nombre3\u003d\"AVANCE gnral\";\n  //Hoja de tableros\n  var id2\u003d\"1F8QvRruBXIocM3S5tFrQ6Ayx99RQqf3K5E7V99LxIFM\";\n  //Nombre hoja paralelos\n  var nombre2\u003d\"Paralelos Emaús\";\n  //Nombre hoja estudiantes\n  var nombre4\u003d\"Estudiantes Emaús\";\n  \n  //Hoja de avance general\n  var hojaAvanceGnral\u003dSpreadsheetApp.openById(id).getSheetByName(nombre3);\n  \n  //Hoja de fecha avance\n  var hojaFecha\u003dSpreadsheetApp.openById(id).getSheetByName(nombre);\n  \n  //Hoja de estudiantes\n  var hojaEstudiantes\u003dSpreadsheetApp.openById(id2).getSheetByName(nombre4);\n  \n  //Hoja de paralelos\n  var hojaParalelos\u003dSpreadsheetApp.openById(id2).getSheetByName(nombre2);\n  \n  var inicio \u003d 3;\n  var fin \u003d 38;\n  \n //Llamada a funcion que genera la hoja de avance general\n  generarHojaAvance(hojaAvanceGnral,hojaFecha, nombre);\n  //Llamada a función que genera la hoja de estudiantes\n  //generarHojaEstudiantes(hojaEstudiantes,hojaAvanceGnral,hojaFecha,nombre,inicio,fin);\n  //Llamada a función que genera la hoja de paralelos\n  //generarHojaPralelos(hojaParalelos, hojaEstudiantes, hojaFecha,nombre4,nombre,inicio,fin);\n  \n}\n\nfunction generarHojaAvance(hojaAvanceGnral,hojaFecha,nombre) {\n  \n  //Ultimo registro de la hoja de avance general\n  var ultimaFila\u003dhojaAvanceGnral.getLastRow();\n  //Ultima columna de la hoa de avance general\n  var ultimaColumnaAvance\u003dhojaAvanceGnral.getLastColumn();\n  //Ultimacolumna de la hoja de fecha avance\n  var ultimaColumnaFecha\u003dhojaFecha.getLastColumn();\n  \n  //se copian las 3 filas que son de cada avance y se pegan al final\n  var rango\u003dhojaAvanceGnral.getRange(2,1,3,ultimaColumnaAvance);\n  rango.copyTo(hojaAvanceGnral.getRange(ultimaFila+2,1)); \n  \n  hojaAvanceGnral.getRange(ultimaFila+2,1).setValue(nombre);//Se pega la fecha\n  //objetivo de la hoja de fechas celda B3\n  var formulaB\u003d\"\u003d\u0027\"+nombre+\"\u0027!B3\";\n  hojaAvanceGnral.getRange(ultimaFila+2,2).setFormula(formulaB);\n  \n  //se toman los valores de las filas 3 y 4 desde la celda C\n  for(i\u003d4;i\u003c\u003dultimaColumnaFecha+1;i++)\n      {\n      \n        var rango2\u003dhojaFecha.getRange(3,i-1).getA1Notation();\n        var formula1\u003d\"\u003d\u0027\"+nombre+\"\u0027!\"+rango2;\n        hojaAvanceGnral.getRange(ultimaFila+2,i).setFormula(formula1);\n        \n        var rango3\u003dhojaFecha.getRange(4,i-1).getA1Notation();\n        var formula2\u003d\"\u003d\u0027\"+nombre+\"\u0027!\"+rango3;\n        hojaAvanceGnral.getRange(ultimaFila+3,i).setFormula(formula2);\n              \n     }     \n}\n\nfunction generarHojaEstudiantes(hojaEstudiantes,hojaAvanceGnral,hojaFecha,nombre,inicio,fin)\n{\n  //Numero en donde inician los estudiates del curso\n  var numeroInicialEstudiantes\u003dinicio;//Cambiar este dato segùn el  paralelo,aqui esta 73 porque el paralelo C empieza en 73, para el paralelo A\u003d3, y para el B\u003d38\n  //Ultima fila de la hoja de avance general\n  var ultimaFila\u003dhojaAvanceGnral.getLastRow();\n  //Ultima columna de la hoja de avance general\n  var ultimaColumnaAvance\u003dhojaAvanceGnral.getLastColumn();\n  \n  //Celda B3 de la hoja de fecha de avance\n  var obj\u003dhojaFecha.getRange(3,2).getValue();\n  \n  //Se insertan las dos columnas donde se trabajara\n  hojaEstudiantes.insertColumnAfter(8);\n  hojaEstudiantes.insertColumnAfter(8);\n  hojaEstudiantes.insertColumnAfter(8);\n  hojaEstudiantes.getRange(\u0027I1:K1\u0027).merge().setValue(nombre);\n  //Se ingresan los valores de las dos ultimas filas de la hoja de avance general\n  var cont\u003d0;\n  \n  \n  for(i\u003d4;i\u003c\u003dultimaColumnaAvance;i++){\n    \n    \n    hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,9).setValue(hojaAvanceGnral.getRange(ultimaFila-1,i).getValue());\n    \n    hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,10).setValue(hojaAvanceGnral.getRange(ultimaFila,i).getValue());\n   \n    var valorK\u003d\"\u003dIF(\"+hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,12).getA1Notation()+\"\u003c0,0,\"+hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,12).getA1Notation()+\")\";\n    hojaEstudiantes.getRange(numeroInicialEstudiantes+cont,11).setFormula(valorK);\n    cont++;\n  }\n  \n  //Valor de la celda B3 de la hoja de fecha avance\n  hojaEstudiantes.getRange(2,9).setValue(obj);\n  \n  //valor de la celda K2\n  var valorK1\u003d\"\u003dIF(\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(2,12).getA1Notation()+\"\u003c0,0,\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(2,12).getA1Notation()+\")\";\n    hojaEstudiantes.getRange(2,11).setFormula(valorK1);\n   \n  //Ultima columna de la hoja Estudiantes\n  var ultimaColumnaEstudiantes\u003dhojaEstudiantes.getLastColumn();\n  //Ultima fila de la hoja Estudiantes\n  //var ultimaFilaEstudiantes\u003dhojaEstudiantes.getLastRow();//Cambiar para otros paralelos, esta la funcion lastRow porque nos devuelve el ultimo registro\u003d108, para paralelos A\u003d37, para B\u003d72\n  var ultimaFilaEstudiantes\u003dfin;\n  //Celda G2 de la hoja Estudiantes\n  var G2\u003d\"\u003d\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(2,ultimaColumnaEstudiantes-1).getA1Notation();\n  hojaEstudiantes.getRange(2,7).setFormula(G2);\n  //Celda H2 de la hoja Estudiantes\n  var H2\u003d\"\u003d\"+hojaEstudiantes.getRange(2,10).getA1Notation()+\"-\"+hojaEstudiantes.getRange(2,ultimaColumnaEstudiantes).getA1Notation();\n  hojaEstudiantes.getRange(2,8).setFormula(H2);\n  \n  //Valores de las celdas G y H para cada estudiante\n  for(i\u003d3;i\u003c\u003dultimaFilaEstudiantes;i++)\n  {\n    \n    \n    var val3\u003d\"\u003d(\"+hojaEstudiantes.getRange(i,9).getA1Notation()+\"-\"+hojaEstudiantes.getRange(i,ultimaColumnaEstudiantes-1).getA1Notation()+\")-\"+hojaEstudiantes.getRange(2,7).getA1Notation();\n      hojaEstudiantes.getRange(i,7).setFormula(val3);\n    var val4\u003d\"\u003d\"+hojaEstudiantes.getRange(i,10).getA1Notation()+\"-\"+hojaEstudiantes.getRange(i,ultimaColumnaEstudiantes).getA1Notation();\n      hojaEstudiantes.getRange(i,8).setFormula(val4);\n  }\n  \n //Condicional de la celda E de cada estudiante\n  for(i\u003d3;i\u003c\u003dultimaFilaEstudiantes;i++)\n  {\n    \n    var val5\u003d\"\u003dIF(\"+hojaEstudiantes.getRange(i,9).getA1Notation()+\"\u003c(\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\"*0.8),\\\"Roja\\\",\\\"OK\\\")\";\n    hojaEstudiantes.getRange(i,5).setFormula(val5);\n    \n     \n  }\n  \n  //Formula de la celda F de cada estudiante\n  for(i\u003d3;i\u003c\u003dultimaFilaEstudiantes;i++)\n  {\n    \n    var val6\u003d\"\u003dAND((\"+hojaEstudiantes.getRange(i,7).getA1Notation()+\"\u003c0),(\"+hojaEstudiantes.getRange(i,8).getA1Notation()+\"\u003e0),(\"+hojaEstudiantes.getRange(i,9).getA1Notation()+\"\u003c\"+hojaEstudiantes.getRange(i,10).getA1Notation()+\"))\";\n    hojaEstudiantes.getRange(i,6).setFormula(val6);\n  }\n  \n  \n}\n\nfunction generarHojaPralelos(hojaParalelos, hojaEstudiantes,hojaFecha, nombre4,nombre,inicio,fin)\n{\n\n    var column1\u003d2;//cambiar si es para otro paralelo, A\u003d2, B\u003d4\n    var column2\u003d3;//cambiar si es para otro paralelo, A\u003d3, B\u003d5\n      //Valor de la celda K2 de la hoja de estudiantes\n     var numeroInicialEstudiantes\u003dinicio;//Cambiar este dato segùn el  paralelo,aqui esta 73 porque el paralelo C empieza en 73, para el paralelo A\u003d3, y para el B\u003d38\n   //Valor de la celda I2 de la hoja de estudiantes\n    var I2\u003d\"\u003d\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(2,9).getA1Notation();\n    \n    var K2\u003d\"\u003d\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(2,11).getA1Notation();\n  //Ultima fila de la oja estudiantes\n    //var ultimaFilaEstudiantes\u003dhojaEstudiantes.getLastRow();//Cambiar para otros paralelos, esta la funcion lastRow porque nos devuelve el ultimo registro\u003d108, para paralelos A\u003d37, para B\u003d72\n  var ultimaFilaEstudiantes\u003dfin;  \n  //Se insertan las columnas para los nuevos cálculos\n    for(i\u003d0;i\u003c\u003d6;i++)\n    {\n        hojaParalelos.insertColumnBefore(2);\n    }\n    \n    //Combinación de celdas y título\n    hojaParalelos.getRange(\u0027B3:E3\u0027).merge().setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(\u0027F3:H3\u0027).merge().setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(\u0027B1\u0027).setValue(nombre);\n    hojaParalelos.getRange(\u0027B1:H1\u0027).merge().setBorder(true, true,true,true, true, true);\n    \n    //Se insertan los nombres de las columnas \n    hojaParalelos.getRange(2,2).setValue(\"A1\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,3).setValue(\"A2\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,4).setValue(\"B1\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,5).setValue(\"B2\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,6).setValue(\"C1\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,7).setValue(\"C2\").setBorder(true, true,true,true, true, true);\n    hojaParalelos.getRange(2,8).setValue(\"Total\").setBorder(true, true,true,true, true, true);\n    \n    //Se inserta el valor de la celda I2 y K2 de la hoja de estudiantes\n      hojaParalelos.getRange(3,2).setFormula(I2);\n      hojaParalelos.getRange(3,6).setFormula(K2);\n    \n    var aux1\u003d0;\n    var aux2\u003d0;\n   \n   //Cuenta el numero de alumnos que estan con \"L\" y con \"N\"\n    for(i\u003d3;i\u003c\u003dultimaFilaEstudiantes;i++)\n    {\n        if(hojaEstudiantes.getRange(i,1).getValue()\u003d\u003d\"L\")\n        {\n        aux1++;\n        }\n        if(hojaEstudiantes.getRange(i,1).getValue()\u003d\u003d\"N\")\n        {\n        aux2++;\n        }\n        \n        \n    }\n      //% de estudiantes que completaron objetivo al 100%\n      var val7\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,9).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,9).getA1Notation()+\",\\\"\u003e\u003d\\\"\u0026\"+hojaParalelos.getRange(3,2).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dL\\\")/\"+aux2;\n      hojaParalelos.getRange(4,column1).setFormula(val7);\n       \n      var val8\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,9).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,9).getA1Notation()+\",\\\"\u003e\u003d\\\"\u0026\"+hojaParalelos.getRange(3,2).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dN\\\")/\"+aux1; \n      hojaParalelos.getRange(4,column2).setFormula(val8);\n      \n    //total % de estudiantes que completaron objetivo al 100%\n      var val9\u003d\"\u003dSUM(\"+hojaParalelos.getRange(4,2).getA1Notation()+\":\"+hojaParalelos.getRange(4,7).getA1Notation()+\")/6\";\n      hojaParalelos.getRange(4,8).setFormula(val9).setBorder(false,false, false, true, false, false);\n   \n   //% de estudiantes con menos de 80% vs objetivo\n       var val10\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,9).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,9).getA1Notation()+\",\\\"\u003c\\\"\u0026\"+hojaParalelos.getRange(3,2).getA1Notation()+\"*0.8,\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dL\\\")/\"+aux2;\n      hojaParalelos.getRange(5,column1).setFormula(val10);\n      \n      var val11\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,9).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,9).getA1Notation()+\",\\\"\u003c\\\"\u0026\"+hojaParalelos.getRange(3,2).getA1Notation()+\"*0.8,\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dN\\\")/\"+aux1;\n      hojaParalelos.getRange(5,column2).setFormula(val11);\n      \n      \n      //total % de estudiantes con menos de 80% vs objetivo\n      var val12\u003d\"\u003dSUM(\"+hojaParalelos.getRange(5,2).getA1Notation()+\":\"+hojaParalelos.getRange(5,7).getA1Notation()+\")/6\";\n       hojaParalelos.getRange(5,8).setFormula(val12).setBorder(false,false, false, true, false, false);\n       \n       //% de retos completados\n         var val13\u003d\"\u003dSUMIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,10).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,10 ).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dL\\\")/(\"+aux2+\"*\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\")\";\n      hojaParalelos.getRange(6,column1).setFormula(val13);\n      \n         var val14\u003d\"\u003dSUMIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,10).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,10 ).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dN\\\")/(\"+aux1+\"*\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(2,9).getA1Notation()+\")\";\n      hojaParalelos.getRange(6,column2).setFormula(val14);\n   \n   \n   \n       //total % de retos completados\n       var val15\u003d\"\u003dSUM(\"+hojaParalelos.getRange(6,2).getA1Notation()+\":\"+hojaParalelos.getRange(6,7).getA1Notation()+\")/6\";\n       hojaParalelos.getRange(6,8).setFormula(val15).setBorder(false,false, false, true, false, false);\n       \n       //% de retos completados en la sesión dentro de objetivo\n       var val16\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,11).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,11).getA1Notation()+\",\\\"\u003e\u003d\\\"\u0026\"+hojaParalelos.getRange(3,6).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dL\\\")/18\";\n       hojaParalelos.getRange(7,column1).setFormula(val16); \n       \n       var val17\u003d\"\u003dCOUNTIFS(\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,11).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,11).getA1Notation()+\",\\\"\u003e\u003d\\\"\u0026\"+hojaParalelos.getRange(3,6).getA1Notation()+\",\u0027\"+nombre4+\"\u0027!\"+hojaEstudiantes.getRange(numeroInicialEstudiantes,1).getA1Notation()+\":\"+hojaEstudiantes.getRange(ultimaFilaEstudiantes,1).getA1Notation()+\",\\\"\u003dN\\\")/18\";\n       hojaParalelos.getRange(7,column2).setFormula(val17);\n       \n       \n       //total % % de retos completados en la sesión dentro de objetivo\n       var total\u003d\"\u003dSUM(\"+hojaParalelos.getRange(7,2).getA1Notation()+\":\"+hojaParalelos.getRange(7,7).getA1Notation()+\")/6\";\n       hojaParalelos.getRange(7,8).setFormula(total).setBorder(false,false, false, true, false, false);\n       \n        //total % de satisfacción \n       var val18\u003d\"\u003dSUM(\"+hojaParalelos.getRange(10,3).getA1Notation()+\":\"+hojaEstudiantes.getRange(10,7).getA1Notation()+\")/6\";\n       hojaParalelos.getRange(10,8).setFormula(val18);\n  \n      \n      \n }\n \n \n\n"}]}